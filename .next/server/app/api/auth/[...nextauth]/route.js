"use strict";(()=>{var e={};e.id=912,e.ids=[912],e.modules={11185:e=>{e.exports=require("mongoose")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},72254:e=>{e.exports=require("node:buffer")},6005:e=>{e.exports=require("node:crypto")},15673:e=>{e.exports=require("node:events")},88849:e=>{e.exports=require("node:http")},22286:e=>{e.exports=require("node:https")},47261:e=>{e.exports=require("node:util")},6614:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>m,patchFetch:()=>x,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>c,staticGenerationAsyncStorage:()=>u});var s={};t.r(s),t.d(s,{GET:()=>i,POST:()=>p});var a=t(49303),o=t(88716),n=t(60670);let{GET:i,POST:p}=t(50731).handlers,d=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/auth/[...nextauth]/route",pathname:"/api/auth/[...nextauth]",filename:"route",bundlePath:"app/api/auth/[...nextauth]/route"},resolvedPagePath:"E:\\Task\\Task-Easy-Nextjs-Mongodb\\app\\api\\auth\\[...nextauth]\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:u,serverHooks:c}=d,m="/api/auth/[...nextauth]/route";function x(){return(0,n.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:u})}},50731:(e,r,t)=>{t.d(r,{I8:()=>c,handlers:()=>d,w7:()=>u,zB:()=>l});var s=t(46591),a=t(80772),o=t(8204),n=t(9487),i=t(65327),p=t(42023);let{handlers:d,signIn:l,signOut:u,auth:c}=(0,s.ZP)({trustHost:!0,providers:[(0,o.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_SECRET_KEY}),(0,a.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},authorize:async e=>{let r=e.email,t=e.password;if(!r||!t)throw new s.UC("Please provide email & password");await (0,n.Z)();let a=await i.n.findOne({email:r}).select("+password +role");if(!a)throw new s.UC("Invalid email or password");if(!a.password)throw Error("Please provide password");if(!await (0,p.compare)(t,a.password))throw Error("Incorrect Password");return{name:a.name,email:a.email,role:a.role,id:a._id}}})],pages:{signIn:"/login"},callbacks:{session:async({session:e,token:r})=>(r?.sub&&(e.user.id=r.sub),e)}})},9487:(e,r,t)=>{t.d(r,{Z:()=>o});var s=t(11185),a=t.n(s);let o=async()=>{try{await a().connect(process.env.MONGO_URI),console.log("Database connected successfully")}catch(e){console.log(`Error:${e.message}`),process.exit(1)}}},49303:(e,r,t)=>{e.exports=t(30517)},65327:(e,r,t)=>{t.d(r,{n:()=>p});var s=t(11185),a=t.n(s),o=t(61555),n=t.n(o);let i=new(a()).Schema({name:{type:String,required:[!0,"Please enter name"]},email:{type:String,required:[!0,"Please enter email"],unique:!0,validator:[n().isEmail,"Please enter valid email address"]},password:{type:String,required:[!0,"Please provide strong password"],select:!1},images:{type:String},role:{type:String,default:"user"},authProviderId:{type:String},tasks:[{type:a().Schema.Types.ObjectId,ref:"Task"}],createdAt:{type:Date,default:Date.now}}),p=a().models?.User||a().model("User",i)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[680,468],()=>t(6614));module.exports=s})();